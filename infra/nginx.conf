worker_processes auto;
events { worker_connections 1024; }

http {
  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" "$http_user_agent"';
  access_log /var/log/nginx/access.log main;

  gzip on;
  sendfile on;
  client_max_body_size 200m;
  proxy_read_timeout 300s;
  proxy_send_timeout 300s;

  upstream core_app { server core-app:${CORE_PORT_INTERNAL}; }

  server {
    listen ${NGINX_HTTP_PORT_INTERNAL};

    # Static files served from shared volume
    location /files/ {
      alias /data/;
      autoindex on;   # dev only; disable in prod
      add_header Access-Control-Allow-Origin *;
    }

    # Gateway health
    location = /healthz { return 200 "ok"; }

    # Internal call to core-app for auth (NGINX auth_request)
    location = /_auth/validate {
      internal;
      proxy_pass http://core_app/auth/validate;
      proxy_set_header Authorization $http_authorization;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Request-Id $request_id;
    }

    # Protect all /api/* via auth_request
    location /api/ {
    #   auth_request /_auth/validate;
    #   error_page 401 = @unauthorized;
    #   error_page 403 = @forbidden;

      proxy_pass http://core_app$request_uri;  # core exposes /api/*
      proxy_redirect off;
      proxy_set_header Host $host;
      proxy_set_header Authorization $http_authorization;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Request-Id $request_id;
    }

    location @unauthorized { return 401; }
    location @forbidden    { return 403; }
  }
}